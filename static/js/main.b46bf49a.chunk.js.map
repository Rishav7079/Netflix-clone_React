{"version":3,"sources":["axios.js","compontes/Row.jsx","request.js","compontes/Banner.jsx","compontes/Nav.jsx","compontes/App.js","index.js"],"names":["instance","axios","create","baseURL","Row","props","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","fetchUrl","request","data","results","fetchData","className","title","map","movie","onClick","console","log","movieTrailer","name","original_title","overview","then","url","urlParams","URLSearchParams","URL","search","catch","error","handleClick","isLarge","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","Api_Key","requests","fetchTrendings","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanticMovies","fetchDocumentaries","Banner","str","n","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b46bf49a.chunk.js","sourcesContent":["\r\nimport axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n\r\n baseURL: \"https://api.themoviedb.org/3\"\r\n})\r\n\r\nexport default instance;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"../axios\";\r\nimport \"./Row.css\";\r\nimport YouTube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\nfunction Row(props) {\r\n  const [movies, setMovies] = useState([]);\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n  const baseUrl = \"https://image.tmdb.org/t/p/w500\";\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(props.fetchUrl);\r\n\r\n      setMovies(request.data.results);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [props.fetchUrl]);\r\n\r\n  const opts = {\r\n    height: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  };\r\n  const handleClick = (movie) => {\r\n    console.log(movie);\r\n    if (trailerUrl) {\r\n      setTrailerUrl(\"\");\r\n    } else {\r\n      movieTrailer(movie?.name ||movie?.title || movie?.original_title ||movie?.overview||\"\")\r\n        .then((url) => {\r\n          const urlParams = new URLSearchParams(new URL(url).search);\r\n          setTrailerUrl(urlParams.get(\"v\"));\r\n        })\r\n        .catch((error) => console.error(error));\r\n    }\r\n  };\r\n \r\n   \r\n  \r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{props.title}</h2>\r\n      <div className=\"row_posters\">\r\n        {movies.map((movie) => (\r\n          <img\r\n            onClick={() => handleClick(movie)}\r\n            key={movie.id}\r\n            className={`row_poster ${props.isLarge && \"row_posterLarge\"}`}\r\n            src={`${baseUrl}${\r\n              props.isLarge ? movie.poster_path : movie.backdrop_path\r\n            }`}\r\n            alt={`image of ${movie.title}`}\r\n          />\r\n        ))}\r\n      </div>\r\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","const Api_Key = \"bd5bf87a5d7b438162a452b672f7cff8\";\r\n\r\nconst requests = {\r\n  fetchTrendings: `/trending/all/week?api_key=${Api_Key}&language=en-US&page`,\r\n  fetchNetflixOriginals: `/discover/tv?api_key=${Api_Key}&with_networks=213`,\r\n  fetchTopRated: `/movie/top_rated?api_key=${Api_Key}&language=en-US&page=1`,\r\n  fetchActionMovies: `/discover/movie?api_key=${Api_Key}&year=2019`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${Api_Key}&year=2017`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${Api_Key}&year=2012`,\r\n  fetchRomanticMovies: `/discover/movie?api_key=${Api_Key}&year=2020`,\r\n  fetchDocumentaries: `/discover/movie?api_key=${Api_Key}&year=2010`,\r\n};\r\n\r\nexport default requests;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"../axios\";\r\nimport requests from \"../request\";\r\nimport \"./Banner.css\"\r\nfunction Banner() {\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(requests.fetchNetflixOriginals);\r\n       \r\n      \r\n\r\n      setMovies(\r\n        request.data.results[\r\n          Math.floor(Math.random() * request.data.results.length)\r\n        ]\r\n      );\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  function truncate(str,n){\r\n   return str?.length>n?str.substr(0,n-1)+ \"...\" : str;\r\n  }\r\n \r\n\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundSize: \"cover\",\r\n        backgroundImage: `url(https://image.tmdb.org/t/p/original/${movies?.backdrop_path})`,\r\n        backgroundPosition: \"center center\",\r\n      }}\r\n    >\r\n      <div className=\"banner_contents\">\r\n        <h1 className=\"banner_title\">\r\n          {movies?.title || movies?.original_name || movies?.original_title}\r\n        </h1>\r\n        <div className=\"banner_buttons\">\r\n         <button className=\"banner_button\">Play\r\n          </button>\r\n          <button className=\"banner_button\">My List\r\n\r\n          </button>\r\n        </div>\r\n        <h1 className=\"banner_description\">{truncate(movies.overview,150)}</h1>\r\n      </div>\r\n      <div className=\"banner_fadeBottom\"></div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Nav.css\";\r\n\r\nfunction Nav() {\r\nconst [show,handleShow] = useState(false)\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\",()=>{\r\n     if(window.scrollY>100){\r\n      handleShow(true);\r\n     }\r\n     else{\r\n      handleShow(false)\r\n     }\r\n    });\r\n    return () => {\r\n       window.removeEventListener(\"scroll\")\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`nav ${show && \"nav__black\"}`}>\r\n      <img\r\n        className=\"nav_logo\"\r\n        src=\"https://1000logos.net/wp-content/uploads/2017/05/Netflix-Logo.png\"\r\n        alt=\"Netflix Logo\"\r\n      />\r\n      <img\r\n        className=\"nav_avatar\"\r\n        src=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\"\r\n        alt=\"Avtar Logo\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\nimport Row from \"./Row\";\nimport requests from \"../request\";\nimport \"./App.css\";\nimport Banner from \"./Banner\";\nimport Nav from \"./Nav\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Nav />\n      <Banner />\n      <Row\n        title=\"NETFLIX ORIGINALS\"\n        fetchUrl={requests.fetchNetflixOriginals}\n        isLarge\n      />\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrendings} />\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanticMovies} />\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './compontes/App';\n\nReactDOM.render(\n\n\n  <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}